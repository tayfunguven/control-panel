# Generated by Django 3.2.9 on 2021-12-14 08:06

import ProductSystem.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('GeneralModel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArrivalReason',
            fields=[
                ('arrival_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Geliş Nedeni Kodu')),
                ('arrival_reason', models.CharField(max_length=150, verbose_name='Geliş Nedeni')),
            ],
            options={
                'verbose_name': 'Geliş Nedeni',
                'verbose_name_plural': 'Geliş Nedenleri',
            },
        ),
        migrations.CreateModel(
            name='DepartureReason',
            fields=[
                ('departure_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Gidiş Nedeni Kodu')),
                ('departure_reason', models.CharField(max_length=150, verbose_name='Gidiş Nedeni')),
            ],
            options={
                'verbose_name': 'Gidiş Nedeni',
                'verbose_name_plural': 'Gidiş Nedenleri',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=200, verbose_name='Kod')),
                ('product_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Cihaz Adı')),
                ('product_category', models.CharField(blank=True, max_length=300, null=True, verbose_name='Kategori')),
                ('product_sub_category', models.CharField(blank=True, max_length=300, null=True, verbose_name='Alt Kategori')),
                ('category_image', models.ImageField(blank=True, editable=False, null=True, upload_to='InventoryCard/Images', verbose_name='Gorsel')),
                ('product_datasheet', models.FileField(blank=True, null=True, upload_to='PRODUCT DATASHEETS', verbose_name='Datasheet')),
                ('recommended_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Tavsiye Edilen Birim Fiyatı')),
                ('money_unit', models.CharField(blank=True, choices=[('TRY', 'TRY'), ('USD', 'USD'), ('EUR', 'EUR')], default='TRY', max_length=10, null=True, verbose_name='Para Birimi')),
                ('product_quantity', models.IntegerField(blank=True, default=1, null=True, verbose_name='Miktar')),
                ('warehouse_location', models.CharField(blank=True, max_length=300, null=True, verbose_name='Lokasyon')),
                ('shelf_info', models.CharField(blank=True, max_length=200, null=True, verbose_name='Raf Bilgisi')),
                ('shelf_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Raf No')),
                ('shelf_product_x_axis', models.IntegerField(blank=True, null=True, verbose_name='Sütun (Column)')),
                ('shelf_product_y_axis', models.IntegerField(blank=True, null=True, verbose_name='Satır (Row)')),
                ('inventory_checked', models.BooleanField(default=False, verbose_name='Kayıt Tamamlandı')),
                ('tested_status', models.BooleanField(default=False, verbose_name='Test Edildi')),
                ('test_result_description', models.TextField(blank=True, null=True, verbose_name='Test Açıklaması')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
            ],
            options={
                'verbose_name': 'Envanter Kaydı',
                'verbose_name_plural': 'Envanter',
                'permissions': [('custom_permission', 'Custom View Permission')],
            },
        ),
        migrations.CreateModel(
            name='InventoryCardImageSet',
            fields=[
                ('image_set_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Görsel Set Kodu')),
                ('image_one', models.ImageField(upload_to='stock_card_images/product {InventoryCard}', verbose_name='Görsel 1')),
                ('image_two', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {InventoryCard.product_code}', verbose_name='Görsel 2')),
                ('image_three', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {InventoryCard.product_code}', verbose_name='Görsel 3')),
                ('image_four', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {InventoryCard.product_code}', verbose_name='Görsel 4')),
            ],
            options={
                'verbose_name': 'Görsel Seti',
                'verbose_name_plural': 'Görsel Setleri',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('category_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Kategori Kodu')),
                ('category_name', models.CharField(max_length=150, verbose_name='Kategori Adı')),
            ],
            options={
                'verbose_name': 'Kategori',
                'verbose_name_plural': 'Kategoriler',
            },
        ),
        migrations.CreateModel(
            name='ProductIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_serial', models.CharField(default='', max_length=30, verbose_name='Seri No')),
                ('additional_internal', models.CharField(max_length=30, verbose_name='Dahili No')),
                ('additional_description', models.TextField(verbose_name='Açıklama')),
                ('tested_status', models.BooleanField(default=False, verbose_name='Test Edildi')),
                ('test_result_description', models.TextField(blank=True, null=True, verbose_name='Test Açıklaması')),
                ('image_one', models.ImageField(blank=True, null=True, upload_to='InventoryID/Images', verbose_name='Görsel 1')),
                ('image_two', models.ImageField(blank=True, null=True, upload_to='InventoryID/Images', verbose_name='Görsel 2')),
                ('image_three', models.ImageField(blank=True, null=True, upload_to='InventoryID/Images', verbose_name='Görsel 3')),
                ('image_four', models.ImageField(blank=True, null=True, upload_to='InventoryID/Images', verbose_name='Görsel 4')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_images', to='ProductSystem.inventory')),
            ],
            options={
                'verbose_name': 'Urun Kimligi',
                'verbose_name_plural': 'Urun Kimlikleri',
            },
        ),
        migrations.CreateModel(
            name='ProductIdentificationImages',
            fields=[
                ('image_set_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Görsel Set Kodu')),
                ('image_one', models.ImageField(blank=True, null=True, upload_to='product_identification_images/product {Inventory.product_code}', verbose_name='Görsel 1')),
                ('image_two', models.ImageField(blank=True, null=True, upload_to='product_identification_images/product {Inventory.product_code}', verbose_name='Görsel 2')),
                ('image_three', models.ImageField(blank=True, null=True, upload_to='product_identification_images/product {Inventory.product_code}', verbose_name='Görsel 3')),
                ('image_four', models.ImageField(blank=True, null=True, upload_to='product_identification_images/product {Inventory.product_code}', verbose_name='Görsel 4')),
            ],
            options={
                'verbose_name': 'Ek Numara Ürün Görseli',
                'verbose_name_plural': 'Ek Numara Ürün Görselleri',
            },
        ),
        migrations.CreateModel(
            name='ProductStatus',
            fields=[
                ('status_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Ürün Durumu Kodu')),
                ('status', models.CharField(max_length=150, verbose_name='Ürün Durumu')),
            ],
            options={
                'verbose_name': 'Ürün Durumu',
                'verbose_name_plural': 'Ürün Durumları',
            },
        ),
        migrations.CreateModel(
            name='ProductSubCategory',
            fields=[
                ('sub_category_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Kategori Kodu')),
                ('sub_category_name', models.CharField(max_length=150, verbose_name='Kategori Adı')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_category', to='ProductSystem.productcategory', verbose_name='Ana Kategori')),
            ],
            options={
                'verbose_name': 'Alt Kategori',
                'verbose_name_plural': 'Alt Kategoriler',
            },
        ),
        migrations.CreateModel(
            name='QuantityCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=200, verbose_name='ID of the Object')),
                ('previous_quantity', models.CharField(max_length=8000, verbose_name='Previous Quantity of the Object')),
            ],
            options={
                'verbose_name': 'Quantity Cache',
                'verbose_name_plural': 'Quantity Caches',
            },
        ),
        migrations.CreateModel(
            name='WarehouseInfo',
            fields=[
                ('warehouse_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Depo Kodu')),
                ('warehouse_location', models.CharField(max_length=300, verbose_name='Lokasyon')),
                ('shelf_info', models.CharField(max_length=200, verbose_name='Raf Bilgisi')),
                ('shelf_no', models.CharField(max_length=20, verbose_name='Raf No')),
                ('shelf_product_x_axis', models.IntegerField(verbose_name='Sütun (Column)')),
                ('shelf_product_y_axis', models.IntegerField(verbose_name='Satır (Row)')),
            ],
            options={
                'verbose_name': 'Depo Bilgisi',
                'verbose_name_plural': 'Depo Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='RMAProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_date', models.DateField(blank=True, default=datetime.date(2021, 12, 14), null=True, verbose_name='İşlem Tarihi')),
                ('product_name', models.CharField(max_length=500, verbose_name='Ürün Adi')),
                ('product_model', models.CharField(max_length=500, verbose_name='Model')),
                ('serial_number', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cihaz Seri No')),
                ('internal_number', models.CharField(max_length=20, verbose_name='Dahili No')),
                ('rma_notes', models.TextField(blank=True, null=True, verbose_name='Ariza Aciklamasi')),
                ('bool_damage1', models.BooleanField(verbose_name='Hasarli Govde')),
                ('bool_damage2', models.BooleanField(verbose_name='Hasarli PSU')),
                ('bool_damage3', models.BooleanField(verbose_name='Hasarli I/O Port')),
                ('bool_damage4', models.BooleanField(verbose_name='Hasarli Ekran | LCD')),
                ('bool_damage5', models.BooleanField(verbose_name='Hasarli Tus')),
                ('bool_damage6', models.BooleanField(verbose_name='Diger')),
                ('other_damage', models.TextField(blank=True, null=True, verbose_name='Tanimlayiniz')),
                ('image_one', models.ImageField(upload_to='RMA_PRODUCTS/Images', verbose_name='Görsel 1')),
                ('image_two', models.ImageField(blank=True, null=True, upload_to='RMA_PRODUCTS/Images', verbose_name='Görsel 2')),
                ('image_three', models.ImageField(blank=True, null=True, upload_to='RMA_PRODUCTS/Images', verbose_name='Görsel 3')),
                ('image_four', models.ImageField(blank=True, null=True, upload_to='RMA_PRODUCTS/Images', verbose_name='Görsel 4')),
                ('document', models.FileField(blank=True, null=True, upload_to='RMA_PRODUCTS/Docs/', verbose_name='Ek Belge')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rma_company', to='GeneralModel.firm', verbose_name='Firma')),
                ('company_authorized', models.ManyToManyField(related_name='rma_company_authorized', to='GeneralModel.FirmAuthorizedPerson', verbose_name='Firma Yetkilisi')),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rma_category', to='ProductSystem.productcategory', verbose_name='Kategori')),
                ('product_sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rma_sub_category', to='ProductSystem.productsubcategory', verbose_name='Alt Kategori')),
            ],
            options={
                'verbose_name': 'RMA Ürünü',
                'verbose_name_plural': 'RMA Ürünleri',
                'permissions': [('technical_permission', 'Technical Permission')],
            },
        ),
        migrations.CreateModel(
            name='ProductOutlet',
            fields=[
                ('outlet_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Çıkış Kodu')),
                ('unicode', models.CharField(default=django.utils.crypto.get_random_string, editable=False, max_length=1000, verbose_name='Unicode')),
                ('has_serial', models.BooleanField(blank=True, verbose_name='Dahili no ile ara')),
                ('date_departure', models.DateField(blank=True, default=datetime.date(2021, 12, 14), null=True, verbose_name='İşlem Tarihi')),
                ('date_interval', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ne Kadar Duracak')),
                ('quantity', models.IntegerField(blank=True, default=1, null=True, verbose_name='Adet')),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Fiyat')),
                ('money_unit', models.CharField(blank=True, choices=[('TRY', 'TRY'), ('USD', 'USD'), ('EUR', 'EUR')], default='TRY', max_length=10, null=True, verbose_name='Para Birimi')),
                ('image', models.ImageField(blank=True, null=True, upload_to=ProductSystem.models.ProductOutlet.user_directory_path, verbose_name='Görsel')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=ProductSystem.models.ProductOutlet.user_directory_path, verbose_name='Görsel 2')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=ProductSystem.models.ProductOutlet.user_directory_path, verbose_name='Görsel 3')),
                ('image3', models.ImageField(blank=True, null=True, upload_to=ProductSystem.models.ProductOutlet.user_directory_path, verbose_name='Görsel 4')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Açıklama')),
                ('delivery_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Teslimat Kodu')),
                ('delivery_warehouse_receipt_document', models.FileField(blank=True, null=True, upload_to='ProductSystem/DeliveryDocs/', verbose_name='Ambar Tesellum Fisi')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outlet_companies', to='GeneralModel.firm', verbose_name='Firma')),
                ('company_authorized', models.ManyToManyField(blank=True, null=True, related_name='outlet_company_authorizeds', to='GeneralModel.FirmAuthorizedPerson', verbose_name='Firma Yetkilisi')),
                ('delivery_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outlet_delivery_companies', to='GeneralModel.deliverycompany', verbose_name='Kargo Firmasi')),
                ('departure_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departure_reasons', to='ProductSystem.departurereason', verbose_name='Gidiş Nedeni')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_outlet_id', to='ProductSystem.productidentification', verbose_name='Ürün Dahili No')),
                ('product_id_inv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_outlet_id', to='ProductSystem.inventory', verbose_name='Ürün Adi')),
            ],
            options={
                'verbose_name': 'Ürün Çıkışı',
                'verbose_name_plural': 'Ürün Çıkışları',
            },
        ),
        migrations.AddField(
            model_name='productidentification',
            name='product_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_status', to='ProductSystem.productstatus', verbose_name='Ürün Durumu'),
        ),
        migrations.CreateModel(
            name='ProductEnrty',
            fields=[
                ('entry_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Giriş Kodu')),
                ('unicode', models.CharField(default=django.utils.crypto.get_random_string, editable=False, max_length=200, verbose_name='Unicode')),
                ('date_arrival', models.DateField(default=datetime.date(2021, 12, 14), verbose_name='İşlem Tarihi')),
                ('date_interval', models.IntegerField(default=0, verbose_name='Ne Kadar Duracak')),
                ('quantity', models.IntegerField(default=1, verbose_name='Adet')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Fiyat')),
                ('money_unit', models.CharField(blank=True, choices=[('TRY', 'TRY'), ('USD', 'USD'), ('EUR', 'EUR')], default='TRY', max_length=10, null=True, verbose_name='Para Birimi')),
                ('description', models.TextField(default='', verbose_name='Açıklama')),
                ('delivery_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Teslimat Kodu')),
                ('delivery_warehouse_receipt_document', models.FileField(blank=True, null=True, upload_to='ProductSystem/DeliveryDocs/', verbose_name='Ambar Tesellum Fisi')),
                ('arrival_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrival_reasons', to='ProductSystem.arrivalreason', verbose_name='Geliş Nedeni')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entry_companies', to='GeneralModel.firm', verbose_name='Firma')),
                ('company_authorized', models.ManyToManyField(blank=True, null=True, related_name='entry_company_authorizeds', to='GeneralModel.FirmAuthorizedPerson', verbose_name='Firma Yetkilisi')),
                ('delivery_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entry_delivery_companies', to='GeneralModel.deliverycompany', verbose_name='Kargo Firmasi')),
            ],
            options={
                'verbose_name': 'Ürün Girişi',
                'verbose_name_plural': 'Ürün Girişleri',
            },
        ),
        migrations.CreateModel(
            name='InventoryImages',
            fields=[
                ('image_set_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Görsel Set Kodu')),
                ('image_one', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {Inventory.product_code}', verbose_name='Görsel 1')),
                ('image_two', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {Inventory.product_code}', verbose_name='Görsel 2')),
                ('image_three', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {Inventory.product_code}', verbose_name='Görsel 3')),
                ('image_four', models.ImageField(blank=True, null=True, upload_to='stock_card_images/product {Inventory.product_code}', verbose_name='Görsel 4')),
                ('inventory_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_ids', to='ProductSystem.inventory', verbose_name='Stok Kartı')),
            ],
            options={
                'verbose_name': 'Envanter Görseli',
                'verbose_name_plural': 'Envanter Görselleri',
            },
        ),
        migrations.CreateModel(
            name='InventoryCard',
            fields=[
                ('card_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Kart Kodu')),
                ('product_code', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ürün Kodu')),
                ('product_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Ürün Adı')),
                ('technical_info', models.TextField(blank=True, null=True, verbose_name='Teknik Bilgiler')),
                ('datasheet_document', models.FileField(blank=True, null=True, upload_to='PRODUCT DATASHEETS', verbose_name='Datasheet')),
                ('image_one', models.ImageField(blank=True, null=True, upload_to='InventoryCard/Images', verbose_name='Görsel 1')),
                ('image_two', models.ImageField(blank=True, null=True, upload_to='InventoryCard/Images', verbose_name='Görsel 2')),
                ('image_three', models.ImageField(blank=True, null=True, upload_to='InventoryCard/Images', verbose_name='Görsel 3')),
                ('image_four', models.ImageField(blank=True, null=True, upload_to='InventoryCard/Images', verbose_name='Görsel 4')),
                ('product_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='ProductSystem.productcategory', verbose_name='Kategori')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='ProductSystem.productsubcategory', verbose_name='Alt Kategori')),
            ],
            options={
                'verbose_name': 'Stok Kartı',
                'verbose_name_plural': 'Stok Kartları',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='product_entry',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_entry', to='ProductSystem.productenrty'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_entry', to='ProductSystem.inventorycard', verbose_name='Stok Kartı'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='warehouse_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ids_warehouse_infos', to='ProductSystem.warehouseinfo', verbose_name='Depo Bilgileri'),
        ),
    ]
